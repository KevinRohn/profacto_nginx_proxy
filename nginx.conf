events {

}

http {
  error_log /etc/nginx/error_log.log warn;
  client_max_body_size 20m;

  proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;
  include    mime.types;


  server {
    server_name <domainname.tld>; # ToDo: set server name

    # location - optional - for static web content
    location / {
        root /usr/share/nginx/html;
        index index.html;
    }

    # profacto location
    location /profacto {
        proxy_pass <profacto-API-url>; # ToDo: set profacto API URL
	      proxy_redirect off;
	      proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 80;
    listen 443 ssl http2;

    ssl_certificate /etc/certs/<certificate.crt>; # ToDo: set certificate
    ssl_certificate_key /etc/certs/<certificate-key.rsa>; # ToDo: set certificate key
    ssl_trusted_certificate /etc/certs/<trusted-intermediate-certificate.cer>; # ToDo: set intermediate trusted certificate

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Improve HTTPS performance with session resumption
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # Resolver settings
    resolver <dns-resolver-1> <dns-resolver-2> valid=300s; # ToDo: set DNS resolver
    resolver_timeout 5s;
  }
}